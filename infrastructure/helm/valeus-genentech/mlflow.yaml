replicaCount: 1
replicaCountCanary: 1
command: /app/entrypoints/mlflow.sh


canary:
  enabled: false

normal_deploy:
  enabled: true

version: mlflow-v1

port: 4180

image:
  repository: mlflow
  pullPolicy: Always
  tag: latest
  containerPort: 4180
  # livenessProbe:
  #   path: /
  #   port: 4180
  #   periodSeconds: 30
  #   successThreshold: 1
  #   failureThreshold: 3
  #   timeoutSeconds: 1
  # readinessProbe:
  #   path: /
  #   port: 4180
  #   periodSeconds: 30
  #   successThreshold: 1
  #   failureThreshold: 3
  #   timeoutSeconds: 1

strategy:
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations:
  product: mlflow

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 4180
  annotations:
    alb.ingress.kubernetes.io/target-type: ip

ingress:
  enabled: true
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: 'localhost/ping'
    kubernetes.io/ingress.class: 'nginx'
    meta.helm.sh/release-name: 'mlflow'
    meta.helm.sh/release-namespace: 'mariner'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
  hosts:
  - host: mlflow.dev-devsvc.roche.com
  tls:
  - hosts:
    - mlflow.dev-devsvc.roche.com

istio_url: mlflow.dev-devsvc.roche.com
istio_enabled: false
resources:
  limits:
    cpu: 500m
    memory: 1024Mi
  requests:
    cpu: 200m
    memory: 256Mi

autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 3
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
