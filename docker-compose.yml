version: "3.4"
services:
  db:
    image: postgres:12
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=app
      - PGDATA=/var/lib/postgresql/data/pgdata
      - PGUSER=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports: 
      - "5432:5432"
    networks:
      - ray_net
  backend:
    image: 'image:latest'
    depends_on:
      - db
      - mlflow
      - ray-worker
    ports:
      - 80:80
      - 8888:8888
    env_file:
      - .env
      - .env.secret
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 5s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.local
    networks:
      - ray_net
    command: bash -c 'sh /app/scripts/prestart.sh && python -m api.main'
    # command: bash -c 'while true; do sleep 1; done;'

  mlflowdb:
    image: postgres:12
    volumes:
      - app-mlflow-data:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_SERVER=mlflow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=app
      - PGDATA=/var/lib/postgresql/data/pgdata
      - PGUSER=postgres
    ports: 
      - "54321:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 2s
      retries: 15
    networks:
      - ray_net


  mlflow:
    depends_on:
      - mlflowdb
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.local
    env_file:
      - .env.secret
    environment:
      - POSTGRES_SERVER=mlflowdb
      - POSTGRES_PORT=5432
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_ARTIFACT_URI=s3://dev-mariner-datasets
      - AWS_MODELS_BUCKET=s3://dev-mariner-datasets
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 5s
      timeout: 60s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    command:  mlflow server --host 0.0.0.0 --port 5000 --default-artifact-root ${AWS_MODELS_BUCKET-s3://dev-mariner-datasets} --backend-store-uri postgresql://postgres:123456@mlflowdb:5432/app
      #command: bash -c 'while true; do sleep 1; done;'
    ports:
      - "5000:5000"
    networks:
      - ray_net

  ray-head:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.local
    env_file:
      - .env
      - .env.secret
    ports:
      - "6379:6379"
      - "8265:8265"
      - "10001:10001"
      - "8000:8000"
    command: ray start --head --dashboard-port=8265 --port=6379 --dashboard-host=0.0.0.0 --block
    shm_size: 3g
    networks:
      - ray_net
  ray-worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.local
    env_file:
      - .env
      - .env.secret
    depends_on: 
      - ray-head
    command: ray start --address=ray-head:6379 --num-cpus=1 --block
    shm_size: 3g
    networks:
      - ray_net
volumes:
  app-db-data:
  app-mlflow-data:

networks:
  ray_net:
    ipam:
      driver: default
      config:
        - subnet: 172.63.0.0/16
