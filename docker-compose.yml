version: "3.3"
services:
  db:
    image: postgres:12
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports: 
      - "5432:5432"
  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    depends_on:
      - db
      - mlflow
    ports:
      - 80:80
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      - SMTP_HOST=${SMTP_HOST}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile.local
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}

  mlflowdb:
    image: postgres:12
    volumes:
      - app-mlflow-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env.local.mlflow
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_SERVER=mlflowdb
      - POSTGRES_PORT=5432
    ports: 
      - "54321:5432"
  mlflow:
    depends_on:
      - mlflowdb
    build:
      context: .
      dockerfile: ./Dockerfile.mlflow
    env_file:
      - .env.local.mlflow
    environment:
      - POSTGRES_SERVER=mlflowdb
      - POSTGRES_PORT=5432
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    ports:
      - "5000:5000"
volumes:
  app-db-data:
  app-mlflow-data:

