name: GNNExample
input_shape: (,1) # (B, N, 1) B batches N rows 1 column (the smiles string)
output_shape: (,1)
featurizer:
  name: MoleculeFeaturizer
  args:
    allow_unknown: false
    sym_bond_list: true
    per_atom_fragmentation: false
layers:
  - GIN1: # an arbitrary name 
		type: GINConv2
		args:
      - activation: ReLU
			- feat_in: 30
      - feat_out: 64
		input_layer: true # input_shape must match GINConv
		forward: GIN2
  - GIN2: # an arbitrary name 
		type: GINConv2ReLU
		args:
      - activation: ReLU
			- feat_in: 64
      - feat_out: 64
		input_layer: true # input_shape must match GINConv
		forward: GIN2
  - GIN3: # an arbitrary name 
		type: GINConv2ReLU
		args:
      - activation: ReLU
			- feat_in: 64
      - feat_out: 64
		input_layer: true # input_shape must match GINConv
		forward: GIN4
  - GIN4: # an arbitrary name 
		type: GINConv2ReLU
		args:
      - activation: ReLU
			- feat_in: 64
      - feat_out: 64
		input_layer: true # input_shape must match GINConv
		forward: Pool4x1
  - Pool4x1:
		type: torch_geometric.global_add_pool
		forward: Output
  - Output:
    type: Linear
    output_layer: true
