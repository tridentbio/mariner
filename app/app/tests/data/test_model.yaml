name: GNNExample
dataset:
  name: test_dataset_2
  target_column: "exp"
  feature_columns:
    - smiles
featurizer:
  name: MolToGraphFeaturizer
  type: app.features.model.featurizers.MoleculeFeaturizer
  column_names:
    - smiles
  args:
    allow_unknown: false
    sym_bond_list: true
    per_atom_fragmentation: false
  forward: GCN1
  column_names: ['smiles']
layers:
  - name: GCN1
    type: torch_geometric.nn.GCNConv
    args:
      in_channels: 30
      out_channels: 64
    input_layer: true # input_shape must match GINConv
    forward: GCN2
    activation: relu
  - name: GCN2 
    type: torch_geometric.nn.GCNConv
    args:
      in_channels: 64
      out_channels: 64
    input_from: GCN1
    forward: GCN3
    activation: relu
  - name: GCN3 # an arbitrary name 
    type: torch_geometric.nn.GCNConv
    args:
      in_channels: 64
      out_channels: 64
    forward: GCN4
    activation: relu
  - name: GCN4
    type: torch_geometric.nn.GCNConv
    args:
      in_channels: 64
      out_channels: 64
    forward: Pool4x1
    activation: ReLU
  - name: Pool4x1
    type: torch_geometric.nn.global_add_pool
    forward: Output
  - name: Output
    type: torch.nn.Linear 
    args: 
      in_features: 64
      out_features: 1
    output_layer: true
