name: GNNExample
input_shape: (1,) # (B, N, 1) B batches N rows 1 column (the smiles string)
output_shape: (1,)
featurizer:
  name: MoleculeFeaturizer
  args:
    allow_unknown: false
    sym_bond_list: true
    per_atom_fragmentation: false
layers:
  - name: GIN1
    type: GINConv2
    args:
      # #activation: ReLU
      in_features: 30
      out_features: 64
    input_layer: true # input_shape must match GINConv
    forward: GIN2
  - name: GIN2 # an arbitrary name 
    type: GINConv2
    args:
      #activation: ReLU
      in_features: 64
      out_features: 64
    forward: GIN3
  - name: GIN3 # an arbitrary name 
    type: GINConv2
    args:
      #activation: ReLU
      in_features: 64
      out_features: 64
    forward: GIN4
  - name: GIN4 # an arbitrary name 
    type: GINConv2
    args:
      #activation: ReLU
      in_features: 64
      out_features: 64
    forward: Pool4x1
  - name: Pool4x1
    type: torch_geometric.global_add_pool
    args:
    forward: Output
  - name: Output
    type: Linear
    args: 
      in_features: 64
      out_features: 1
    output_layer: true
