"""seed

Revision ID: 4452555d97de
Revises: 
Create Date: 2022-08-28 21:08:40.152228

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4452555d97de'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_full_name'), 'user', ['full_name'], unique=False)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('bytes', sa.Integer(), nullable=True),
    sa.Column('rows', sa.Integer(), nullable=True),
    sa.Column('stats', sa.JSON(), nullable=True),
    sa.Column('split_target', sa.String(), nullable=True),
    sa.Column('split_actual', sa.String(), nullable=True),
    sa.Column('split_type', sa.String(), nullable=True),
    sa.Column('split_column', sa.String(), nullable=True),
    sa.Column('data_url', sa.String(), nullable=True),
    sa.Column('columns', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dataset_id'), 'dataset', ['id'], unique=False)
    op.create_index(op.f('ix_dataset_name'), 'dataset', ['name'], unique=True)
    op.create_table('columnsmetadata',
    sa.Column('data_type', sa.JSON(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('pattern', sa.String(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pattern', 'dataset_id')
    )
    op.create_table('model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mlflow_name', sa.String(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_model_id'), 'model', ['id'], unique=True)
    op.create_table('modelfeaturesandtarget',
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('column_name', sa.String(), nullable=False),
    sa.Column('column_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('model_id', 'column_name')
    )
    op.create_table('modelversion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mlflow_version', sa.String(), nullable=False),
    sa.Column('mlflow_model_name', sa.String(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_modelversion_id'), 'modelversion', ['id'], unique=True)
    op.create_table('deployment',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('model_version_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['model_version_id'], ['modelversion.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('experiment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('experiment_name', sa.String(), nullable=True),
    sa.Column('mlflow_id', sa.String(), nullable=False),
    sa.Column('model_version_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('stage', sa.String(), server_default='RUNNING', nullable=True),
    sa.Column('epochs', sa.Integer(), nullable=False),
    sa.Column('history', sa.JSON(), nullable=True),
    sa.Column('train_metrics', sa.JSON(), nullable=True),
    sa.Column('val_metrics', sa.JSON(), nullable=True),
    sa.Column('test_metrics', sa.JSON(), nullable=True),
    sa.Column('hyperparams', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['model_version_id'], ['modelversion.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_experiment_id'), 'experiment', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_experiment_id'), table_name='experiment')
    op.drop_table('experiment')
    op.drop_table('deployment')
    op.drop_index(op.f('ix_modelversion_id'), table_name='modelversion')
    op.drop_table('modelversion')
    op.drop_table('modelfeaturesandtarget')
    op.drop_index(op.f('ix_model_id'), table_name='model')
    op.drop_table('model')
    op.drop_table('columnsmetadata')
    op.drop_index(op.f('ix_dataset_name'), table_name='dataset')
    op.drop_index(op.f('ix_dataset_id'), table_name='dataset')
    op.drop_table('dataset')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_full_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
