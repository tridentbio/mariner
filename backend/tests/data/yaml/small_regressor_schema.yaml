name: GNNExample                                                   # The name of the model
framework: torch                                                   # Framework that will be used
dataset:                                                           # Description of dataset
  name: Small Zinc dataset                                         # Name of the dataset
  strategy: forwardArgs                                            # For torch models, forwardArgs is recommended
  targetColumns:                                                   # Description of the target columns
    - name: tpsa                                                   # Name of the column
      dataType:                                                    # Column dataType
        domainKind: numeric
      outModule: LinearJoined                                      # The model output id that will estimate this value
  featureColumns:                                                  # Description of the feature columns. Have the same structure as targetColumns, but doesn't require outModule.
    - name: smiles
      dataType:
        domainKind: smiles
    - name: mwt
      dataType:
        domainKind: numeric
  featurizers:                                                    # Featurizer components that will be used in the preprocessing step.
    - name: MolToGraphFeaturizer
      type: fleet.model_builder.featurizers.MoleculeFeaturizer
      forwardArgs:
        mol: $smiles
      constructorArgs:
        allow_unknown: false
        sym_bond_list: true
        per_atom_fragmentation: false
spec:                                                             # Torch model specification
  layers:                                                         # List of layers used
    - name: GCN1                                                  # Layer component id
      type: torch_geometric.nn.GCNConv                            # Python object to use in model instantiation
      constructorArgs:                                            # Object constructor arguments
        in_channels: 26
        out_channels: 64
      forwardArgs:                                                # Specifies how to connect inputs to outputs during forward
        x: ${MolToGraphFeaturizer.x}                              # References the output of MolToGraphFeaturizer's x property.
        edge_index: ${MolToGraphFeaturizer.edge_index}            # References the output of MolToGraphFeaturizer's edge_index property.
    - name: GCN1_Activation
      type: torch.nn.ReLU
      constructorArgs:
        inplace: False
      forwardArgs:
        input: ${GCN1}

    - name: GCN2
      type: torch_geometric.nn.GCNConv
      forwardArgs:
        x: ${GCN1_Activation}
        edge_index: ${MolToGraphFeaturizer.edge_index}
      constructorArgs:
        in_channels: 64
        out_channels: 64

    - name: GCN2_Activation
      type: torch.nn.ReLU
      constructorArgs:
        inplace: False
      forwardArgs:
        input: ${GCN2}

    - name: GCN3
      type: torch_geometric.nn.GCNConv
      forwardArgs:
        x: ${GCN2_Activation}
        edge_index: ${MolToGraphFeaturizer.edge_index}
      constructorArgs:
        in_channels: 64
        out_channels: 64

    - name: GCN3_Activation
      type: torch.nn.ReLU
      constructorArgs:
        inplace: False
      forwardArgs:
        input: ${GCN3}

    - name: AddPool
      type: fleet.model_builder.layers.GlobalPooling
      forwardArgs:
        x: ${GCN3_Activation}
        batch: ${MolToGraphFeaturizer.batch}
      constructorArgs:
        aggr: "sum"
    # End of fst branch

    # Second branch would simply be linear layers in mwt
    - name: "Linear1"
      type: torch.nn.Linear
      constructorArgs:
        in_features: 1
        out_features: 10
      forwardArgs:
        input: ${mwt}

    - name: Combiner
      type: fleet.model_builder.layers.Concat
      constructorArgs:
        dim: -1
      forwardArgs:
        xs:
          - "${AddPool}"
          - "${Linear1}"

    - name: LinearJoined
      type: torch.nn.Linear
      forwardArgs:
        input: $Combiner
      constructorArgs:
        in_features: 74
        out_features: 1
