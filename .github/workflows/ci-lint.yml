# Compare code quality between origin and target branches
# If event iquals merge, updates the score on the target branch
# Cache j
name: Code Quality Analysis
on:
  pull_request:
    branches: [ "develop", "releases/**" ]
    types: [opened, synchronize]
  workflow_dispatch:
jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache Dependencies
      id: poetry-cache
      uses: actions/cache@v3
      with:
        path: $HOME/.cache/pypoetry
        key: ${{ runner.os }}-poetry-cache
    - name: Cache Pylint results
      id: pylint-cache
      uses: actions/cache@v3
      with:
        path: $HOME/.cache/pylint
        key: ${{ runner.os }}-pylint-cache
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9' 
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.3.2
        virtualenvs-create: false
        virtualenvs-in-project: false
        installer-parallel: true
    - name: Install project
      run: poetry install
    - name: Debug
      run: ls $HOME; ls $HOME/.cache; ls /home ; echo "${GITHUB_REF#refs/heads/} ${{ github.event.pull_request.base.ref }}"
    - name: Update target branch score
      if: github.event.pull_request.merged == 'true'
      run: "poetry run python scripts/pylint_packages.py ${GITHUB_REF#refs/heads/} ${{ github.event.pull_request.base.ref }} --save-new-target --save-src"

    - name: Update src branch
      if: github.event.pull_request.merged != 'true'
      run: "poetry run python scripts/pylint_packages.py ${GITHUB_REF#refs/heads/} ${{ github.event.pull_request.base.ref }} --save-src"
