name: Continous Integration with Docker
on:
  pull_request:
    branches: [ "develop", "releases/**" ]
    types: [opened, synchronize]
    paths: [backend/**]
  workflow_dispatch:
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: us-east-1
    AWS_MODELS_BUCKET: s3://dev-mariner-datasets
    AWS_DATASETS: dev-mariner-datasets
    GITHUB_CLIENT_ID: --
    GITHUB_CLIENT_SECRET: --
    COMPOSE_HTTP_TIMEOUT: 600
    COMPOSE_USER: 1000:1000
    DOCKER_COMPOSE: "docker compose -f docker-compose.yml -f docker-compose-cicd.yml"
jobs:
  all-backend-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build services
      run: make build DOCKER_COMPOSE="$DOCKER_COMPOSE" CORE_SERVICES="webapp backend ray-head ray-worker mlflow mlflowdb db"
    - name: Start services
      run: make start DOCKER_COMPOSE="$DOCKER_COMPOSE" CORE_SERVICES="webapp backend ray-head ray-worker mlflow mlflowdb db"
    - name: E2E tests
      run: make e2e DOCKER_COMPOSE="$DOCKER_COMPOSE"
    - name: Archive e2e videos
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: webapp/cypress/videos
    - name: Integration tests and get report
      if: 'failure() || success()'
      run: bash -c "$DOCKER_COMPOSE exec -T backend bash scripts/test.sh -m pytest -m 'integration'"
