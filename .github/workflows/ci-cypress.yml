name: Component & Tests CI
on:
  workflow_dispatch: {}
  push:
    branches: [ "develop", "releases/**" ]
    # paths:
    #   - backend/**/*
    #   - webapp/**/*
  pull_request:
    # Only when PRs are targeting develop or releases/** branches
    branches: [ develop, releases/** ]
    # paths:
    #   - backend/**/*
    #   - webapp/**/*
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: us-east-1
    AWS_MODELS_BUCKET: s3://dev-mariner-datasets
    AWS_DATASETS: dev-mariner-datasets
    COMPOSE_HTTP_TIMEOUT: 600
    DOCKER_COMPOSE: "docker compose -f docker-compose.yml -f docker-compose.cicd.yml"
jobs:
  generate-webapp-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build webapp
        working-directory: webapp
        run: |
          npm ci
          npm run build:ci
      
      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: webapp-build-ci
          if-no-files-found: error
          path: webapp/build
          retention-days: 2

  component-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: webapp
          component: true
          browser: chrome
      - uses: actions/upload-artifact@v3
        name: Upload Cypress videos on failure
        if: failure()
        with:
          name: component-cypress-videos
          path: webapp/cypress/videos
          if-no-files-found: warn
          retention-days: 2

  # backend-build:
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - generate-webapp-build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #       id: buildx

  #     - name: Build and cache backend
  #       uses: docker/bake-action@v3
  #       with:
  #         push: false
  #         load: true
  #         # gha = Github Actions cache type
  #         # service_name.attr=value
  #         set: |
  #           backend.cache-from=type=gha
  #           backend.cache-to=type=gha
  #         files: docker-compose.yml, docker-compose.cicd.yml
  #         targets: backend

  e2e-tests:
    runs-on: ubuntu-latest
    needs:
      # - backend-build
      - generate-webapp-build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the webapp build
        uses: actions/download-artifact@v3
        with:
          name: webapp-build-ci
          path: webapp/build/

      - name: Start backend
        run: make e2e-test DOCKER_COMPOSE="$DOCKER_COMPOSE" CORE_SERVICES="backend ray-head ray-worker mlflow mlflowdb db"

      - name: Cypress run
        uses: cypress-io/github-action@v5.8.4
        with:
          working-directory: webapp
          browser: chrome
          start: npm run serve:ci
          # spec: |
            # cypress/e2e/deployments/deployment-workflow.cy.ts
          install-command: npm install vite
          wait-on: 'http://localhost:3000/login, http://localhost:8000/health'
          wait-on-timeout: 30 # seconds
      - name: Collect backend container logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          images: 'mariner-backend:latest'
          dest: .github/artifacts/backend-logs
      - uses: actions/upload-artifact@v3
        name: Upload backend error logs
        if: failure()
        with:
          name: backend-logs
          path: .github/artifacts/backend-logs
          retention-days: 2
      - uses: actions/upload-artifact@v3
        name: Upload Cypress videos on failure
        if: failure()
        with:
          name: e2e-cypress-videos
          path: webapp/cypress/videos
          if-no-files-found: warn
          retention-days: 2