name: Component & Tests CI
on:
  workflow_dispatch: {}
  push:
    branches: [ "develop", "releases/**" ]
  pull_request:
    # Only when PRs are targeting develop or releases/** branches
    branches: [ develop, releases/** ]
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: us-east-1
    AWS_MODELS_BUCKET: s3://dev-mariner-datasets
    AWS_DATASETS: dev-mariner-datasets
    COMPOSE_HTTP_TIMEOUT: 600
    DOCKER_COMPOSE: "docker compose -f docker-compose.yml -f docker-compose.cicd.yml"
    CYPRESS_SCHEMA_PATH: backend/tests/data
jobs:
  cypress-install:
    runs-on: ubuntu-latest
    container:
      image: cypress/included:12.6.0
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress install
        uses: cypress-io/github-action@v5
        with:
          working-directory: webapp
          # Disable running of tests within install job
          runTests: false
          build: npm run build
      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build-webapp
          if-no-files-found: error
          path: build-webapp
  backend-install:
    runs-on: ubuntu-latest
    needs: cypress-install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build backend
        run: make build-backend DOCKER_COMPOSE="$DOCKER_COMPOSE"
      - name: Start backend
        run: make start DOCKER_COMPOSE="$DOCKER_COMPOSE" CORE_SERVICES="db mlflowdb mlflow ray-head ray-worker backend"
  component-tests:
    runs-on: ubuntu-latest
    needs: cypress-install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: build-webapp
          path: build-webapp
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: webapp
          component: true
          browser: chrome
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: component-cypress-videos
          path: webapp/cypress/videos
          if-no-files-found: warn
          retention-days: 2
  e2e-tests:
    runs-on: ubuntu-latest
    needs: 
      - cypress-install
      - backend-install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: build-webapp
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: webapp
          browser: chrome
          start: npm start
          spec: |
            cypress/e2e/deployments/*
          wait-on: 'http://localhost:3000, http://localhost:8000/health'
      - name: Collect backend container logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          images: 'image:latest' # Backend image
          dest: .github/artifacts/backend-logs
      - uses: actions/upload-artifact@v3
        name: Upload backend logs
        if: failure()
        with:
          name: backend-logs
          path: .github/artifacts/backend-logs
          retention-days: 2
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-cypress-videos
          path: webapp/cypress/videos
          if-no-files-found: warn
          retention-days: 2
        