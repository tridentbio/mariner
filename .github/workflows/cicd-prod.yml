name: Deploy to Production (manual)
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: mariner-prod
  IMAGE_TAG: latest
jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-20.04
    steps:
    - name: Information
      env:
        BRANCH: ${{ github.event.inputs.branch }}
      run: |
        if [ -n "$BRANCH" ]
        then
          echo Deploying "$BRANCH" for "$DEPLOYMENT_NAME"
        else
          echo Deploying default branch for "$DEPLOYMENT_NAME"
        fi
    - name: Build - Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Build - Git Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.branch }}
    - name: Build - Get ECR Repository
      run: |
        aws ecr describe-repositories --region $AWS_REGION --repository-names $ECR_REPOSITORY > /dev/null 2>&1 || \
        aws ecr create-repository --region $AWS_REGION  --repository-name $ECR_REPOSITORY
    - name: Build - Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build - Build and push image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY -a
    - name: Deploy - Update ECS Deployment
      id: deploy-to-ecs
      run: |
        aws ecs update-service --force-new-deployment --service mariner-prod --cluster mariner-prod